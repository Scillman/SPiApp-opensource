<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ExpenseIt">
    
    <!-- COLORS -->
    <Color x:Key="Dark_TitleBarBackground">#3C3C3C</Color><!-- Window Title Bar -->
    <Color x:Key="Dark_DefaultBackground">#252526</Color><!-- Default Background -->
    <Color x:Key="Dark_TabControlInactiveBackground">#2D2D2D</Color><!-- Inactive Tab -->
    <Color x:Key="Dark_TabControlActiveBackground">#1E1E1E</Color><!-- Active Tab -->
    <Color x:Key="Dark_TabControlContentBackground">#1E1E1E</Color><!-- Background for content -->
    <Color x:Key="Dark_TabItemForeground">#C5C5C5</Color>
    <Color x:Key="Dark_TabItemBackground">#1E1E1E</Color>
    <Color x:Key="Dark_TabItemBackgroundHover">#000000</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="Brush_TitleBarBackground" Color="{StaticResource Dark_TitleBarBackground}" />
    <SolidColorBrush x:Key="Brush_TabControlBackground" Color="{StaticResource Dark_TabControlInactiveBackground}" />
    <SolidColorBrush x:Key="Brush_DefaultBackground" Color="{StaticResource Dark_DefaultBackground}" />
    <SolidColorBrush x:Key="Brush_TabItemForeground" Color="{StaticResource Dark_TabItemForeground}" />
    <SolidColorBrush x:Key="Brush_TabItemBackground" Color="{StaticResource Dark_TabItemBackground}" />
    <SolidColorBrush x:Key="Brush_TabItemBackgroundHover" Color="{StaticResource Dark_TabItemBackgroundHover}" />
    <SolidColorBrush x:Key="Brush_TabControlContentBackground" Color="{StaticResource Dark_TabControlContentBackground}" />

    <!-- WINDOW -->
    <Style x:Key="CompilerWindow" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource Brush_DefaultBackground}" />
    </Style>
    
    <!-- GRID -->
    <Style x:Key="CompilerGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type FrameworkElement}, AncestorLevel=1}}" />
    </Style>

    <!-- TABCONTROL -->
    <Style x:Key="CompilerTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource Brush_TabControlBackground}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <Grid x:Name="HeaderPanelGrid"
                              Grid.Row="0"
                              Grid.Column="0"
                              Panel.ZIndex="1">
                            <TabPanel x:Name="HeaderPanel"
                                      IsItemsHost="true"
                                      KeyboardNavigation.TabIndex="1"
                                      Background="{StaticResource Brush_DefaultBackground}"
                                      />
                        </Grid>
                        <Border x:Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Background="{StaticResource Brush_TabControlContentBackground}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- LABEL -->
    <Style x:Key="CompilerTabItemLabel" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="{StaticResource Brush_TabItemBackground}" />
        <Setter Property="Foreground" Value="{StaticResource Brush_TabItemForeground}" />
        <Setter Property="Padding" Value="10,6,10,6" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Brush_TabItemBackgroundHover}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TABITEM -->
    <Style x:Key="CompilerTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource Brush_TabControlBackground}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!-- Setter Property="Foreground" Value="{DynamicResource TextBrush}" / -->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,0,1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border"
                            HorizontalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              UseLayoutRounding="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="PART_ContentLeftCol" Width="Auto" />
                                <ColumnDefinition x:Name="PART_ContentRightCol" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="PART_ContentTopRow" Height="Auto" />
                                <RowDefinition x:Name="PART_ContentBottomRow" Height="Auto" />
                            </Grid.RowDefinitions>
                            <Label x:Name="label"
                                   Style="{StaticResource CompilerTabItemLabel}"
                                   Content="{TemplateBinding Header}"
                                   Background="{TemplateBinding Background}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush_TabItemBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- TAB BUTTON -->
    <Style x:Key="CompilerTabButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderThickness="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Name="content" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Gray" />
                        </Trigger>
                        <!-- Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Green" />
                        </Trigger -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CompilerTabButton2" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="Background" Value="Lime" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderThickness="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Name="content" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Gray" />
                        </Trigger>
                        <!-- Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Green" />
                        </Trigger -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- APPLY STYLES -->
    <Style TargetType="{x:Type Window}" BasedOn="{StaticResource CompilerWindow}" />
    <Style TargetType="{x:Type Grid}" BasedOn="{StaticResource CompilerGrid}" />
    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource CompilerTabControl}" />
    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource CompilerTabItem}" />
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CompilerTabButton}" />

</ResourceDictionary>